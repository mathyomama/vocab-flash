import re
import urllib2
import section



class Parse(object):
	"""This is giant class which will handle the giant string, called source, generated by the urllib read function."""

	languages = [
			"English"
			]

	part-of-speeches = [
			"Noun",
			"Verb",
			"Adjective",
			"Adverb",
			"Pronoun",
			"Preposition",
			"Conjunction",
			"Interjection"
			]

	pronunciation = [
			"Pronunciation"
			]

	etymology = [
			"Etymology"
			]

	synonyms = [
			"Synonyms"
			]
	
	useful_headings = {
			"languages":languages,
			"pronunciation":pronunciation,
			"etymology":etymology,
			"part-of-speech":part-of-speech
			"synonyms":synonyms
			}


	def __init__(self, data):
		self.data = data
		self.split(data)

	def split(self, data):
		"""This takes the file-like object and splits the data into a dictionary with the headings as keys and information as values."""
		self.sections = list()
		equal = re.compile(r"^=+.*=+$")
		heading = ""
		information = ""
		for line in data:
			if re.match(r"^----$", line) != None:
				break
			result = equal.match(line)
			if result == None:
				information += line
				continue
			else:
				self.sections.append((heading, information))
				heading = result.group().strip('=')
				information = ""
	
	def classify(self):
		"""This method translates the dictionary created by split and creates Section objects such as Noun or Pronunciation, or 'classifies' them."""
		pass
	
	def get_data(self):
		return self.data
	
	def get_sections(self):
		return self.sections

	def get_headings(self):
		return [section[0] for section in self.sections]
